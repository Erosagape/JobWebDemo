'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsJobOrder"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsJobOrder
    Inherits Global.System.Data.DataSet
    
    Private tableJob_Order As Job_OrderDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("Job_Order")) Is Nothing) Then
                MyBase.Tables.Add(New Job_OrderDataTable(ds.Tables("Job_Order")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Job_Order() As Job_OrderDataTable
        Get
            Return Me.tableJob_Order
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsJobOrder = CType(MyBase.Clone,dsJobOrder)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("Job_Order")) Is Nothing) Then
                MyBase.Tables.Add(New Job_OrderDataTable(ds.Tables("Job_Order")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableJob_Order = CType(MyBase.Tables("Job_Order"),Job_OrderDataTable)
        If (initTable = true) Then
            If (Not (Me.tableJob_Order) Is Nothing) Then
                Me.tableJob_Order.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "dsJobOrder"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsJobOrder.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableJob_Order = New Job_OrderDataTable()
        MyBase.Tables.Add(Me.tableJob_Order)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeJob_Order() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsJobOrder = New dsJobOrder()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub Job_OrderRowChangeEventHandler(ByVal sender As Object, ByVal e As Job_OrderRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Job_OrderDataTable
        Inherits Global.System.Data.TypedTableBase(Of Job_OrderRow)
        
        Private columnBranchCode As Global.System.Data.DataColumn
        
        Private columnJNo As Global.System.Data.DataColumn
        
        Private columnJRevise As Global.System.Data.DataColumn
        
        Private columnConfirmDate As Global.System.Data.DataColumn
        
        Private columnCPolicyCode As Global.System.Data.DataColumn
        
        Private columnDocDate As Global.System.Data.DataColumn
        
        Private columnCustCode As Global.System.Data.DataColumn
        
        Private columnCustBranch As Global.System.Data.DataColumn
        
        Private columnCustContactName As Global.System.Data.DataColumn
        
        Private columnQNo As Global.System.Data.DataColumn
        
        Private columnRevise As Global.System.Data.DataColumn
        
        Private columnManagerCode As Global.System.Data.DataColumn
        
        Private columnCSCode As Global.System.Data.DataColumn
        
        Private columnDescription As Global.System.Data.DataColumn
        
        Private columnTRemark As Global.System.Data.DataColumn
        
        Private columnJobStatus As Global.System.Data.DataColumn
        
        Private columnJobType As Global.System.Data.DataColumn
        
        Private columnShipBy As Global.System.Data.DataColumn
        
        Private columnInvNo As Global.System.Data.DataColumn
        
        Private columnInvTotal As Global.System.Data.DataColumn
        
        Private columnInvProduct As Global.System.Data.DataColumn
        
        Private columnInvCountry As Global.System.Data.DataColumn
        
        Private columnInvFCountry As Global.System.Data.DataColumn
        
        Private columnInvInterPort As Global.System.Data.DataColumn
        
        Private columnInvProductQty As Global.System.Data.DataColumn
        
        Private columnInvProductUnit As Global.System.Data.DataColumn
        
        Private columnInvCurUnit As Global.System.Data.DataColumn
        
        Private columnInvCurRate As Global.System.Data.DataColumn
        
        Private columnImExDate As Global.System.Data.DataColumn
        
        Private columnBLNo As Global.System.Data.DataColumn
        
        Private columnBookingNo As Global.System.Data.DataColumn
        
        Private columnClearPort As Global.System.Data.DataColumn
        
        Private columnClearPortNo As Global.System.Data.DataColumn
        
        Private columnClearDate As Global.System.Data.DataColumn
        
        Private columnLoadDate As Global.System.Data.DataColumn
        
        Private columnForwarderCode As Global.System.Data.DataColumn
        
        Private columnAgentCode As Global.System.Data.DataColumn
        
        Private columnVesselName As Global.System.Data.DataColumn
        
        Private columnETDDate As Global.System.Data.DataColumn
        
        Private columnETADate As Global.System.Data.DataColumn
        
        Private columnETTime As Global.System.Data.DataColumn
        
        Private columnFNetPrice As Global.System.Data.DataColumn
        
        Private columnBNetPrice As Global.System.Data.DataColumn
        
        Private columnCancelReson As Global.System.Data.DataColumn
        
        Private columnCancelDate As Global.System.Data.DataColumn
        
        Private columnCancelTime As Global.System.Data.DataColumn
        
        Private columnCancelProve As Global.System.Data.DataColumn
        
        Private columnCancelProveDate As Global.System.Data.DataColumn
        
        Private columnCancelProveTime As Global.System.Data.DataColumn
        
        Private columnCloseJobDate As Global.System.Data.DataColumn
        
        Private columnCloseJobTime As Global.System.Data.DataColumn
        
        Private columnCloseJobBy As Global.System.Data.DataColumn
        
        Private columnDeclareType As Global.System.Data.DataColumn
        
        Private columnDeclareNumber As Global.System.Data.DataColumn
        
        Private columnDeclareStatus As Global.System.Data.DataColumn
        
        Private columnTyAuthorSp As Global.System.Data.DataColumn
        
        Private columnTy19BIS As Global.System.Data.DataColumn
        
        Private columnTyClearTax As Global.System.Data.DataColumn
        
        Private columnTyClearTaxReson As Global.System.Data.DataColumn
        
        Private columnEstDeliverDate As Global.System.Data.DataColumn
        
        Private columnEstDeliverTime As Global.System.Data.DataColumn
        
        Private columnTotalContainer As Global.System.Data.DataColumn
        
        Private columnDutyDate As Global.System.Data.DataColumn
        
        Private columnDutyAmount As Global.System.Data.DataColumn
        
        Private columnDutyCustPayOther As Global.System.Data.DataColumn
        
        Private columnDutyCustPayChqAmt As Global.System.Data.DataColumn
        
        Private columnDutyCustPayBankAmt As Global.System.Data.DataColumn
        
        Private columnDutyCustPayEPAYAmt As Global.System.Data.DataColumn
        
        Private columnDutyCustPayCardAmt As Global.System.Data.DataColumn
        
        Private columnDutyCustPayCashAmt As Global.System.Data.DataColumn
        
        Private columnDutyCustPayOtherAmt As Global.System.Data.DataColumn
        
        Private columnDutyLtdPayOther As Global.System.Data.DataColumn
        
        Private columnDutyLtdPayChqAmt As Global.System.Data.DataColumn
        
        Private columnDutyLtdPayEPAYAmt As Global.System.Data.DataColumn
        
        Private columnDutyLtdPayCashAmt As Global.System.Data.DataColumn
        
        Private columnDutyLtdPayOtherAmt As Global.System.Data.DataColumn
        
        Private columnConfirmChqDate As Global.System.Data.DataColumn
        
        Private columnShippingEmp As Global.System.Data.DataColumn
        
        Private columnShippingCmd As Global.System.Data.DataColumn
        
        Private columnTotalGW As Global.System.Data.DataColumn
        
        Private columnGWUnit As Global.System.Data.DataColumn
        
        Private columnTSRequest As Global.System.Data.DataColumn
        
        Private columnShipmentType As Global.System.Data.DataColumn
        
        Private columnReadyToClearDate As Global.System.Data.DataColumn
        
        Private columnCommission As Global.System.Data.DataColumn
        
        Private columnCommPayTo As Global.System.Data.DataColumn
        
        Private columnProjectName As Global.System.Data.DataColumn
        
        Private columnMVesselName As Global.System.Data.DataColumn
        
        Private columnTotalNW As Global.System.Data.DataColumn
        
        Private columnMeasurement As Global.System.Data.DataColumn
        
        Private columnCustRefNO As Global.System.Data.DataColumn
        
        Private columnTotalQty As Global.System.Data.DataColumn
        
        Private columnHAWB As Global.System.Data.DataColumn
        
        Private columnMAWB As Global.System.Data.DataColumn
        
        Private columnconsigneecode As Global.System.Data.DataColumn
        
        Private columnprivilegests As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Job_Order"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BranchCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBranchCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property JNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property JReviseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJRevise
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ConfirmDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConfirmDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CPolicyCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCPolicyCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DocDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDocDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CustCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CustBranchColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustBranch
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CustContactNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustContactName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property QNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ReviseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRevise
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ManagerCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnManagerCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CSCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCSCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescription
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TRemarkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRemark
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property JobStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJobStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property JobTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJobType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ShipByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShipBy
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property InvNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInvNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property InvTotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInvTotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property InvProductColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInvProduct
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property InvCountryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInvCountry
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property InvFCountryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInvFCountry
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property InvInterPortColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInvInterPort
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property InvProductQtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInvProductQty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property InvProductUnitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInvProductUnit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property InvCurUnitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInvCurUnit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property InvCurRateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInvCurRate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ImExDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImExDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BLNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBLNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BookingNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBookingNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClearPortColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClearPort
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClearPortNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClearPortNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ClearDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClearDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property LoadDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLoadDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ForwarderCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnForwarderCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AgentCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAgentCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property VesselNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVesselName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ETDDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnETDDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ETADateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnETADate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ETTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnETTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property FNetPriceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFNetPrice
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property BNetPriceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBNetPrice
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CancelResonColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCancelReson
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CancelDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCancelDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CancelTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCancelTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CancelProveColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCancelProve
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CancelProveDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCancelProveDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CancelProveTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCancelProveTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CloseJobDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCloseJobDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CloseJobTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCloseJobTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CloseJobByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCloseJobBy
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DeclareTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDeclareType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DeclareNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDeclareNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DeclareStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDeclareStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TyAuthorSpColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTyAuthorSp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Ty19BISColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTy19BIS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TyClearTaxColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTyClearTax
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TyClearTaxResonColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTyClearTaxReson
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EstDeliverDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEstDeliverDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property EstDeliverTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEstDeliverTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TotalContainerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalContainer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DutyDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDutyDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DutyAmountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDutyAmount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DutyCustPayOtherColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDutyCustPayOther
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DutyCustPayChqAmtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDutyCustPayChqAmt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DutyCustPayBankAmtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDutyCustPayBankAmt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DutyCustPayEPAYAmtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDutyCustPayEPAYAmt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DutyCustPayCardAmtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDutyCustPayCardAmt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DutyCustPayCashAmtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDutyCustPayCashAmt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DutyCustPayOtherAmtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDutyCustPayOtherAmt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DutyLtdPayOtherColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDutyLtdPayOther
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DutyLtdPayChqAmtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDutyLtdPayChqAmt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DutyLtdPayEPAYAmtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDutyLtdPayEPAYAmt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DutyLtdPayCashAmtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDutyLtdPayCashAmt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DutyLtdPayOtherAmtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDutyLtdPayOtherAmt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ConfirmChqDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConfirmChqDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ShippingEmpColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShippingEmp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ShippingCmdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShippingCmd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TotalGWColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalGW
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property GWUnitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGWUnit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TSRequestColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTSRequest
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ShipmentTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShipmentType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ReadyToClearDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReadyToClearDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CommissionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCommission
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CommPayToColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCommPayTo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ProjectNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProjectName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MVesselNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMVesselName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TotalNWColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalNW
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MeasurementColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMeasurement
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CustRefNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCustRefNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TotalQtyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalQty
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property HAWBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHAWB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MAWBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMAWB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property consigneecodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnconsigneecode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property privilegestsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprivilegests
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Job_OrderRow
            Get
                Return CType(Me.Rows(index),Job_OrderRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event Job_OrderRowChanging As Job_OrderRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event Job_OrderRowChanged As Job_OrderRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event Job_OrderRowDeleting As Job_OrderRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event Job_OrderRowDeleted As Job_OrderRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddJob_OrderRow(ByVal row As Job_OrderRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddJob_OrderRow( _
                    ByVal BranchCode As String,  _
                    ByVal JNo As String,  _
                    ByVal JRevise As Byte,  _
                    ByVal ConfirmDate As Date,  _
                    ByVal CPolicyCode As String,  _
                    ByVal DocDate As Date,  _
                    ByVal CustCode As String,  _
                    ByVal CustBranch As String,  _
                    ByVal CustContactName As String,  _
                    ByVal QNo As String,  _
                    ByVal Revise As Short,  _
                    ByVal ManagerCode As String,  _
                    ByVal CSCode As String,  _
                    ByVal Description As String,  _
                    ByVal TRemark As String,  _
                    ByVal JobStatus As Byte,  _
                    ByVal JobType As Byte,  _
                    ByVal ShipBy As Byte,  _
                    ByVal InvNo As String,  _
                    ByVal InvTotal As Double,  _
                    ByVal InvProduct As String,  _
                    ByVal InvCountry As String,  _
                    ByVal InvFCountry As String,  _
                    ByVal InvInterPort As String,  _
                    ByVal InvProductQty As Double,  _
                    ByVal InvProductUnit As String,  _
                    ByVal InvCurUnit As String,  _
                    ByVal InvCurRate As Double,  _
                    ByVal ImExDate As Date,  _
                    ByVal BLNo As String,  _
                    ByVal BookingNo As String,  _
                    ByVal ClearPort As String,  _
                    ByVal ClearPortNo As String,  _
                    ByVal ClearDate As Date,  _
                    ByVal LoadDate As Date,  _
                    ByVal ForwarderCode As String,  _
                    ByVal AgentCode As String,  _
                    ByVal VesselName As String,  _
                    ByVal ETDDate As Date,  _
                    ByVal ETADate As Date,  _
                    ByVal ETTime As Date,  _
                    ByVal FNetPrice As String,  _
                    ByVal BNetPrice As Double,  _
                    ByVal CancelReson As String,  _
                    ByVal CancelDate As Date,  _
                    ByVal CancelTime As Date,  _
                    ByVal CancelProve As String,  _
                    ByVal CancelProveDate As Date,  _
                    ByVal CancelProveTime As Date,  _
                    ByVal CloseJobDate As Date,  _
                    ByVal CloseJobTime As Date,  _
                    ByVal CloseJobBy As String,  _
                    ByVal DeclareType As String,  _
                    ByVal DeclareNumber As String,  _
                    ByVal DeclareStatus As String,  _
                    ByVal TyAuthorSp As String,  _
                    ByVal Ty19BIS As String,  _
                    ByVal TyClearTax As String,  _
                    ByVal TyClearTaxReson As String,  _
                    ByVal EstDeliverDate As Date,  _
                    ByVal EstDeliverTime As Date,  _
                    ByVal TotalContainer As String,  _
                    ByVal DutyDate As Date,  _
                    ByVal DutyAmount As Double,  _
                    ByVal DutyCustPayOther As String,  _
                    ByVal DutyCustPayChqAmt As Double,  _
                    ByVal DutyCustPayBankAmt As Double,  _
                    ByVal DutyCustPayEPAYAmt As Double,  _
                    ByVal DutyCustPayCardAmt As Double,  _
                    ByVal DutyCustPayCashAmt As Double,  _
                    ByVal DutyCustPayOtherAmt As Double,  _
                    ByVal DutyLtdPayOther As String,  _
                    ByVal DutyLtdPayChqAmt As Double,  _
                    ByVal DutyLtdPayEPAYAmt As Double,  _
                    ByVal DutyLtdPayCashAmt As Double,  _
                    ByVal DutyLtdPayOtherAmt As Double,  _
                    ByVal ConfirmChqDate As Date,  _
                    ByVal ShippingEmp As String,  _
                    ByVal ShippingCmd As String,  _
                    ByVal TotalGW As Double,  _
                    ByVal GWUnit As String,  _
                    ByVal TSRequest As Byte,  _
                    ByVal ShipmentType As Byte,  _
                    ByVal ReadyToClearDate As Date,  _
                    ByVal Commission As Integer,  _
                    ByVal CommPayTo As String,  _
                    ByVal ProjectName As String,  _
                    ByVal MVesselName As String,  _
                    ByVal TotalNW As Double,  _
                    ByVal Measurement As String,  _
                    ByVal CustRefNO As String,  _
                    ByVal TotalQty As String,  _
                    ByVal HAWB As String,  _
                    ByVal MAWB As String,  _
                    ByVal consigneecode As String,  _
                    ByVal privilegests As String) As Job_OrderRow
            Dim rowJob_OrderRow As Job_OrderRow = CType(Me.NewRow,Job_OrderRow)
            Dim columnValuesArray() As Object = New Object() {BranchCode, JNo, JRevise, ConfirmDate, CPolicyCode, DocDate, CustCode, CustBranch, CustContactName, QNo, Revise, ManagerCode, CSCode, Description, TRemark, JobStatus, JobType, ShipBy, InvNo, InvTotal, InvProduct, InvCountry, InvFCountry, InvInterPort, InvProductQty, InvProductUnit, InvCurUnit, InvCurRate, ImExDate, BLNo, BookingNo, ClearPort, ClearPortNo, ClearDate, LoadDate, ForwarderCode, AgentCode, VesselName, ETDDate, ETADate, ETTime, FNetPrice, BNetPrice, CancelReson, CancelDate, CancelTime, CancelProve, CancelProveDate, CancelProveTime, CloseJobDate, CloseJobTime, CloseJobBy, DeclareType, DeclareNumber, DeclareStatus, TyAuthorSp, Ty19BIS, TyClearTax, TyClearTaxReson, EstDeliverDate, EstDeliverTime, TotalContainer, DutyDate, DutyAmount, DutyCustPayOther, DutyCustPayChqAmt, DutyCustPayBankAmt, DutyCustPayEPAYAmt, DutyCustPayCardAmt, DutyCustPayCashAmt, DutyCustPayOtherAmt, DutyLtdPayOther, DutyLtdPayChqAmt, DutyLtdPayEPAYAmt, DutyLtdPayCashAmt, DutyLtdPayOtherAmt, ConfirmChqDate, ShippingEmp, ShippingCmd, TotalGW, GWUnit, TSRequest, ShipmentType, ReadyToClearDate, Commission, CommPayTo, ProjectName, MVesselName, TotalNW, Measurement, CustRefNO, TotalQty, HAWB, MAWB, consigneecode, privilegests}
            rowJob_OrderRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowJob_OrderRow)
            Return rowJob_OrderRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Job_OrderDataTable = CType(MyBase.Clone,Job_OrderDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Job_OrderDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnBranchCode = MyBase.Columns("BranchCode")
            Me.columnJNo = MyBase.Columns("JNo")
            Me.columnJRevise = MyBase.Columns("JRevise")
            Me.columnConfirmDate = MyBase.Columns("ConfirmDate")
            Me.columnCPolicyCode = MyBase.Columns("CPolicyCode")
            Me.columnDocDate = MyBase.Columns("DocDate")
            Me.columnCustCode = MyBase.Columns("CustCode")
            Me.columnCustBranch = MyBase.Columns("CustBranch")
            Me.columnCustContactName = MyBase.Columns("CustContactName")
            Me.columnQNo = MyBase.Columns("QNo")
            Me.columnRevise = MyBase.Columns("Revise")
            Me.columnManagerCode = MyBase.Columns("ManagerCode")
            Me.columnCSCode = MyBase.Columns("CSCode")
            Me.columnDescription = MyBase.Columns("Description")
            Me.columnTRemark = MyBase.Columns("TRemark")
            Me.columnJobStatus = MyBase.Columns("JobStatus")
            Me.columnJobType = MyBase.Columns("JobType")
            Me.columnShipBy = MyBase.Columns("ShipBy")
            Me.columnInvNo = MyBase.Columns("InvNo")
            Me.columnInvTotal = MyBase.Columns("InvTotal")
            Me.columnInvProduct = MyBase.Columns("InvProduct")
            Me.columnInvCountry = MyBase.Columns("InvCountry")
            Me.columnInvFCountry = MyBase.Columns("InvFCountry")
            Me.columnInvInterPort = MyBase.Columns("InvInterPort")
            Me.columnInvProductQty = MyBase.Columns("InvProductQty")
            Me.columnInvProductUnit = MyBase.Columns("InvProductUnit")
            Me.columnInvCurUnit = MyBase.Columns("InvCurUnit")
            Me.columnInvCurRate = MyBase.Columns("InvCurRate")
            Me.columnImExDate = MyBase.Columns("ImExDate")
            Me.columnBLNo = MyBase.Columns("BLNo")
            Me.columnBookingNo = MyBase.Columns("BookingNo")
            Me.columnClearPort = MyBase.Columns("ClearPort")
            Me.columnClearPortNo = MyBase.Columns("ClearPortNo")
            Me.columnClearDate = MyBase.Columns("ClearDate")
            Me.columnLoadDate = MyBase.Columns("LoadDate")
            Me.columnForwarderCode = MyBase.Columns("ForwarderCode")
            Me.columnAgentCode = MyBase.Columns("AgentCode")
            Me.columnVesselName = MyBase.Columns("VesselName")
            Me.columnETDDate = MyBase.Columns("ETDDate")
            Me.columnETADate = MyBase.Columns("ETADate")
            Me.columnETTime = MyBase.Columns("ETTime")
            Me.columnFNetPrice = MyBase.Columns("FNetPrice")
            Me.columnBNetPrice = MyBase.Columns("BNetPrice")
            Me.columnCancelReson = MyBase.Columns("CancelReson")
            Me.columnCancelDate = MyBase.Columns("CancelDate")
            Me.columnCancelTime = MyBase.Columns("CancelTime")
            Me.columnCancelProve = MyBase.Columns("CancelProve")
            Me.columnCancelProveDate = MyBase.Columns("CancelProveDate")
            Me.columnCancelProveTime = MyBase.Columns("CancelProveTime")
            Me.columnCloseJobDate = MyBase.Columns("CloseJobDate")
            Me.columnCloseJobTime = MyBase.Columns("CloseJobTime")
            Me.columnCloseJobBy = MyBase.Columns("CloseJobBy")
            Me.columnDeclareType = MyBase.Columns("DeclareType")
            Me.columnDeclareNumber = MyBase.Columns("DeclareNumber")
            Me.columnDeclareStatus = MyBase.Columns("DeclareStatus")
            Me.columnTyAuthorSp = MyBase.Columns("TyAuthorSp")
            Me.columnTy19BIS = MyBase.Columns("Ty19BIS")
            Me.columnTyClearTax = MyBase.Columns("TyClearTax")
            Me.columnTyClearTaxReson = MyBase.Columns("TyClearTaxReson")
            Me.columnEstDeliverDate = MyBase.Columns("EstDeliverDate")
            Me.columnEstDeliverTime = MyBase.Columns("EstDeliverTime")
            Me.columnTotalContainer = MyBase.Columns("TotalContainer")
            Me.columnDutyDate = MyBase.Columns("DutyDate")
            Me.columnDutyAmount = MyBase.Columns("DutyAmount")
            Me.columnDutyCustPayOther = MyBase.Columns("DutyCustPayOther")
            Me.columnDutyCustPayChqAmt = MyBase.Columns("DutyCustPayChqAmt")
            Me.columnDutyCustPayBankAmt = MyBase.Columns("DutyCustPayBankAmt")
            Me.columnDutyCustPayEPAYAmt = MyBase.Columns("DutyCustPayEPAYAmt")
            Me.columnDutyCustPayCardAmt = MyBase.Columns("DutyCustPayCardAmt")
            Me.columnDutyCustPayCashAmt = MyBase.Columns("DutyCustPayCashAmt")
            Me.columnDutyCustPayOtherAmt = MyBase.Columns("DutyCustPayOtherAmt")
            Me.columnDutyLtdPayOther = MyBase.Columns("DutyLtdPayOther")
            Me.columnDutyLtdPayChqAmt = MyBase.Columns("DutyLtdPayChqAmt")
            Me.columnDutyLtdPayEPAYAmt = MyBase.Columns("DutyLtdPayEPAYAmt")
            Me.columnDutyLtdPayCashAmt = MyBase.Columns("DutyLtdPayCashAmt")
            Me.columnDutyLtdPayOtherAmt = MyBase.Columns("DutyLtdPayOtherAmt")
            Me.columnConfirmChqDate = MyBase.Columns("ConfirmChqDate")
            Me.columnShippingEmp = MyBase.Columns("ShippingEmp")
            Me.columnShippingCmd = MyBase.Columns("ShippingCmd")
            Me.columnTotalGW = MyBase.Columns("TotalGW")
            Me.columnGWUnit = MyBase.Columns("GWUnit")
            Me.columnTSRequest = MyBase.Columns("TSRequest")
            Me.columnShipmentType = MyBase.Columns("ShipmentType")
            Me.columnReadyToClearDate = MyBase.Columns("ReadyToClearDate")
            Me.columnCommission = MyBase.Columns("Commission")
            Me.columnCommPayTo = MyBase.Columns("CommPayTo")
            Me.columnProjectName = MyBase.Columns("ProjectName")
            Me.columnMVesselName = MyBase.Columns("MVesselName")
            Me.columnTotalNW = MyBase.Columns("TotalNW")
            Me.columnMeasurement = MyBase.Columns("Measurement")
            Me.columnCustRefNO = MyBase.Columns("CustRefNO")
            Me.columnTotalQty = MyBase.Columns("TotalQty")
            Me.columnHAWB = MyBase.Columns("HAWB")
            Me.columnMAWB = MyBase.Columns("MAWB")
            Me.columnconsigneecode = MyBase.Columns("consigneecode")
            Me.columnprivilegests = MyBase.Columns("privilegests")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnBranchCode = New Global.System.Data.DataColumn("BranchCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBranchCode)
            Me.columnJNo = New Global.System.Data.DataColumn("JNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJNo)
            Me.columnJRevise = New Global.System.Data.DataColumn("JRevise", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJRevise)
            Me.columnConfirmDate = New Global.System.Data.DataColumn("ConfirmDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConfirmDate)
            Me.columnCPolicyCode = New Global.System.Data.DataColumn("CPolicyCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCPolicyCode)
            Me.columnDocDate = New Global.System.Data.DataColumn("DocDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDocDate)
            Me.columnCustCode = New Global.System.Data.DataColumn("CustCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustCode)
            Me.columnCustBranch = New Global.System.Data.DataColumn("CustBranch", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustBranch)
            Me.columnCustContactName = New Global.System.Data.DataColumn("CustContactName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustContactName)
            Me.columnQNo = New Global.System.Data.DataColumn("QNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQNo)
            Me.columnRevise = New Global.System.Data.DataColumn("Revise", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRevise)
            Me.columnManagerCode = New Global.System.Data.DataColumn("ManagerCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnManagerCode)
            Me.columnCSCode = New Global.System.Data.DataColumn("CSCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCSCode)
            Me.columnDescription = New Global.System.Data.DataColumn("Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescription)
            Me.columnTRemark = New Global.System.Data.DataColumn("TRemark", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRemark)
            Me.columnJobStatus = New Global.System.Data.DataColumn("JobStatus", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJobStatus)
            Me.columnJobType = New Global.System.Data.DataColumn("JobType", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJobType)
            Me.columnShipBy = New Global.System.Data.DataColumn("ShipBy", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShipBy)
            Me.columnInvNo = New Global.System.Data.DataColumn("InvNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInvNo)
            Me.columnInvTotal = New Global.System.Data.DataColumn("InvTotal", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInvTotal)
            Me.columnInvProduct = New Global.System.Data.DataColumn("InvProduct", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInvProduct)
            Me.columnInvCountry = New Global.System.Data.DataColumn("InvCountry", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInvCountry)
            Me.columnInvFCountry = New Global.System.Data.DataColumn("InvFCountry", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInvFCountry)
            Me.columnInvInterPort = New Global.System.Data.DataColumn("InvInterPort", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInvInterPort)
            Me.columnInvProductQty = New Global.System.Data.DataColumn("InvProductQty", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInvProductQty)
            Me.columnInvProductUnit = New Global.System.Data.DataColumn("InvProductUnit", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInvProductUnit)
            Me.columnInvCurUnit = New Global.System.Data.DataColumn("InvCurUnit", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInvCurUnit)
            Me.columnInvCurRate = New Global.System.Data.DataColumn("InvCurRate", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInvCurRate)
            Me.columnImExDate = New Global.System.Data.DataColumn("ImExDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImExDate)
            Me.columnBLNo = New Global.System.Data.DataColumn("BLNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBLNo)
            Me.columnBookingNo = New Global.System.Data.DataColumn("BookingNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBookingNo)
            Me.columnClearPort = New Global.System.Data.DataColumn("ClearPort", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClearPort)
            Me.columnClearPortNo = New Global.System.Data.DataColumn("ClearPortNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClearPortNo)
            Me.columnClearDate = New Global.System.Data.DataColumn("ClearDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClearDate)
            Me.columnLoadDate = New Global.System.Data.DataColumn("LoadDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLoadDate)
            Me.columnForwarderCode = New Global.System.Data.DataColumn("ForwarderCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnForwarderCode)
            Me.columnAgentCode = New Global.System.Data.DataColumn("AgentCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAgentCode)
            Me.columnVesselName = New Global.System.Data.DataColumn("VesselName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVesselName)
            Me.columnETDDate = New Global.System.Data.DataColumn("ETDDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnETDDate)
            Me.columnETADate = New Global.System.Data.DataColumn("ETADate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnETADate)
            Me.columnETTime = New Global.System.Data.DataColumn("ETTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnETTime)
            Me.columnFNetPrice = New Global.System.Data.DataColumn("FNetPrice", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFNetPrice)
            Me.columnBNetPrice = New Global.System.Data.DataColumn("BNetPrice", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBNetPrice)
            Me.columnCancelReson = New Global.System.Data.DataColumn("CancelReson", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCancelReson)
            Me.columnCancelDate = New Global.System.Data.DataColumn("CancelDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCancelDate)
            Me.columnCancelTime = New Global.System.Data.DataColumn("CancelTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCancelTime)
            Me.columnCancelProve = New Global.System.Data.DataColumn("CancelProve", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCancelProve)
            Me.columnCancelProveDate = New Global.System.Data.DataColumn("CancelProveDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCancelProveDate)
            Me.columnCancelProveTime = New Global.System.Data.DataColumn("CancelProveTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCancelProveTime)
            Me.columnCloseJobDate = New Global.System.Data.DataColumn("CloseJobDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCloseJobDate)
            Me.columnCloseJobTime = New Global.System.Data.DataColumn("CloseJobTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCloseJobTime)
            Me.columnCloseJobBy = New Global.System.Data.DataColumn("CloseJobBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCloseJobBy)
            Me.columnDeclareType = New Global.System.Data.DataColumn("DeclareType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDeclareType)
            Me.columnDeclareNumber = New Global.System.Data.DataColumn("DeclareNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDeclareNumber)
            Me.columnDeclareStatus = New Global.System.Data.DataColumn("DeclareStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDeclareStatus)
            Me.columnTyAuthorSp = New Global.System.Data.DataColumn("TyAuthorSp", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTyAuthorSp)
            Me.columnTy19BIS = New Global.System.Data.DataColumn("Ty19BIS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTy19BIS)
            Me.columnTyClearTax = New Global.System.Data.DataColumn("TyClearTax", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTyClearTax)
            Me.columnTyClearTaxReson = New Global.System.Data.DataColumn("TyClearTaxReson", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTyClearTaxReson)
            Me.columnEstDeliverDate = New Global.System.Data.DataColumn("EstDeliverDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEstDeliverDate)
            Me.columnEstDeliverTime = New Global.System.Data.DataColumn("EstDeliverTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEstDeliverTime)
            Me.columnTotalContainer = New Global.System.Data.DataColumn("TotalContainer", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalContainer)
            Me.columnDutyDate = New Global.System.Data.DataColumn("DutyDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDutyDate)
            Me.columnDutyAmount = New Global.System.Data.DataColumn("DutyAmount", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDutyAmount)
            Me.columnDutyCustPayOther = New Global.System.Data.DataColumn("DutyCustPayOther", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDutyCustPayOther)
            Me.columnDutyCustPayChqAmt = New Global.System.Data.DataColumn("DutyCustPayChqAmt", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDutyCustPayChqAmt)
            Me.columnDutyCustPayBankAmt = New Global.System.Data.DataColumn("DutyCustPayBankAmt", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDutyCustPayBankAmt)
            Me.columnDutyCustPayEPAYAmt = New Global.System.Data.DataColumn("DutyCustPayEPAYAmt", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDutyCustPayEPAYAmt)
            Me.columnDutyCustPayCardAmt = New Global.System.Data.DataColumn("DutyCustPayCardAmt", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDutyCustPayCardAmt)
            Me.columnDutyCustPayCashAmt = New Global.System.Data.DataColumn("DutyCustPayCashAmt", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDutyCustPayCashAmt)
            Me.columnDutyCustPayOtherAmt = New Global.System.Data.DataColumn("DutyCustPayOtherAmt", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDutyCustPayOtherAmt)
            Me.columnDutyLtdPayOther = New Global.System.Data.DataColumn("DutyLtdPayOther", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDutyLtdPayOther)
            Me.columnDutyLtdPayChqAmt = New Global.System.Data.DataColumn("DutyLtdPayChqAmt", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDutyLtdPayChqAmt)
            Me.columnDutyLtdPayEPAYAmt = New Global.System.Data.DataColumn("DutyLtdPayEPAYAmt", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDutyLtdPayEPAYAmt)
            Me.columnDutyLtdPayCashAmt = New Global.System.Data.DataColumn("DutyLtdPayCashAmt", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDutyLtdPayCashAmt)
            Me.columnDutyLtdPayOtherAmt = New Global.System.Data.DataColumn("DutyLtdPayOtherAmt", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDutyLtdPayOtherAmt)
            Me.columnConfirmChqDate = New Global.System.Data.DataColumn("ConfirmChqDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConfirmChqDate)
            Me.columnShippingEmp = New Global.System.Data.DataColumn("ShippingEmp", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShippingEmp)
            Me.columnShippingCmd = New Global.System.Data.DataColumn("ShippingCmd", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShippingCmd)
            Me.columnTotalGW = New Global.System.Data.DataColumn("TotalGW", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalGW)
            Me.columnGWUnit = New Global.System.Data.DataColumn("GWUnit", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGWUnit)
            Me.columnTSRequest = New Global.System.Data.DataColumn("TSRequest", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTSRequest)
            Me.columnShipmentType = New Global.System.Data.DataColumn("ShipmentType", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShipmentType)
            Me.columnReadyToClearDate = New Global.System.Data.DataColumn("ReadyToClearDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReadyToClearDate)
            Me.columnCommission = New Global.System.Data.DataColumn("Commission", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCommission)
            Me.columnCommPayTo = New Global.System.Data.DataColumn("CommPayTo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCommPayTo)
            Me.columnProjectName = New Global.System.Data.DataColumn("ProjectName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProjectName)
            Me.columnMVesselName = New Global.System.Data.DataColumn("MVesselName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMVesselName)
            Me.columnTotalNW = New Global.System.Data.DataColumn("TotalNW", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalNW)
            Me.columnMeasurement = New Global.System.Data.DataColumn("Measurement", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMeasurement)
            Me.columnCustRefNO = New Global.System.Data.DataColumn("CustRefNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCustRefNO)
            Me.columnTotalQty = New Global.System.Data.DataColumn("TotalQty", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalQty)
            Me.columnHAWB = New Global.System.Data.DataColumn("HAWB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHAWB)
            Me.columnMAWB = New Global.System.Data.DataColumn("MAWB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMAWB)
            Me.columnconsigneecode = New Global.System.Data.DataColumn("consigneecode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnconsigneecode)
            Me.columnprivilegests = New Global.System.Data.DataColumn("privilegests", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprivilegests)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnBranchCode, Me.columnJNo}, false))
            Me.columnBranchCode.MaxLength = 3
            Me.columnJNo.MaxLength = 15
            Me.columnCPolicyCode.MaxLength = 10
            Me.columnCustCode.MaxLength = 15
            Me.columnCustBranch.MaxLength = 4
            Me.columnCustContactName.MaxLength = 100
            Me.columnQNo.MaxLength = 15
            Me.columnManagerCode.MaxLength = 10
            Me.columnCSCode.MaxLength = 10
            Me.columnDescription.MaxLength = 4000
            Me.columnTRemark.MaxLength = 250
            Me.columnInvNo.MaxLength = 100
            Me.columnInvProduct.MaxLength = 100
            Me.columnInvCountry.MaxLength = 2
            Me.columnInvFCountry.MaxLength = 2
            Me.columnInvInterPort.MaxLength = 3
            Me.columnInvProductUnit.MaxLength = 3
            Me.columnInvCurUnit.MaxLength = 3
            Me.columnBLNo.MaxLength = 40
            Me.columnBookingNo.MaxLength = 50
            Me.columnClearPort.MaxLength = 5
            Me.columnClearPortNo.MaxLength = 15
            Me.columnForwarderCode.MaxLength = 10
            Me.columnAgentCode.MaxLength = 5
            Me.columnVesselName.MaxLength = 50
            Me.columnFNetPrice.MaxLength = 50
            Me.columnCancelReson.MaxLength = 100
            Me.columnCancelProve.MaxLength = 10
            Me.columnCloseJobBy.MaxLength = 10
            Me.columnDeclareType.MaxLength = 3
            Me.columnDeclareNumber.MaxLength = 20
            Me.columnDeclareStatus.MaxLength = 1
            Me.columnTyAuthorSp.MaxLength = 2
            Me.columnTy19BIS.MaxLength = 2
            Me.columnTyClearTax.MaxLength = 2
            Me.columnTyClearTaxReson.MaxLength = 50
            Me.columnTotalContainer.MaxLength = 50
            Me.columnDutyCustPayOther.MaxLength = 30
            Me.columnDutyLtdPayOther.MaxLength = 30
            Me.columnShippingEmp.MaxLength = 10
            Me.columnShippingCmd.MaxLength = 70
            Me.columnGWUnit.MaxLength = 3
            Me.columnCommPayTo.MaxLength = 100
            Me.columnProjectName.MaxLength = 100
            Me.columnMVesselName.MaxLength = 50
            Me.columnMeasurement.MaxLength = 20
            Me.columnCustRefNO.MaxLength = 50
            Me.columnTotalQty.MaxLength = 50
            Me.columnHAWB.MaxLength = 50
            Me.columnMAWB.MaxLength = 50
            Me.columnconsigneecode.MaxLength = 50
            Me.columnprivilegests.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewJob_OrderRow() As Job_OrderRow
            Return CType(Me.NewRow,Job_OrderRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Job_OrderRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Job_OrderRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Job_OrderRowChangedEvent) Is Nothing) Then
                RaiseEvent Job_OrderRowChanged(Me, New Job_OrderRowChangeEvent(CType(e.Row,Job_OrderRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Job_OrderRowChangingEvent) Is Nothing) Then
                RaiseEvent Job_OrderRowChanging(Me, New Job_OrderRowChangeEvent(CType(e.Row,Job_OrderRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Job_OrderRowDeletedEvent) Is Nothing) Then
                RaiseEvent Job_OrderRowDeleted(Me, New Job_OrderRowChangeEvent(CType(e.Row,Job_OrderRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Job_OrderRowDeletingEvent) Is Nothing) Then
                RaiseEvent Job_OrderRowDeleting(Me, New Job_OrderRowChangeEvent(CType(e.Row,Job_OrderRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveJob_OrderRow(ByVal row As Job_OrderRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsJobOrder = New dsJobOrder()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Job_OrderDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class Job_OrderRow
        Inherits Global.System.Data.DataRow
        
        Private tableJob_Order As Job_OrderDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableJob_Order = CType(Me.Table,Job_OrderDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BranchCode() As String
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.BranchCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BranchCode' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.BranchCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property JNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.JNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JNo' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.JNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property JRevise() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.JReviseColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JRevise' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.JReviseColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ConfirmDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.ConfirmDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ConfirmDate' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.ConfirmDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CPolicyCode() As String
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.CPolicyCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CPolicyCode' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.CPolicyCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DocDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.DocDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DocDate' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.DocDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CustCode() As String
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.CustCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CustCode' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.CustCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CustBranch() As String
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.CustBranchColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CustBranch' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.CustBranchColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CustContactName() As String
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.CustContactNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CustContactName' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.CustContactNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property QNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.QNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QNo' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.QNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Revise() As Short
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.ReviseColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Revise' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.ReviseColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ManagerCode() As String
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.ManagerCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ManagerCode' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.ManagerCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CSCode() As String
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.CSCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CSCode' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.CSCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Description' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TRemark() As String
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.TRemarkColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TRemark' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.TRemarkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property JobStatus() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.JobStatusColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JobStatus' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.JobStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property JobType() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.JobTypeColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JobType' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.JobTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ShipBy() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.ShipByColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ShipBy' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.ShipByColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property InvNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.InvNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InvNo' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.InvNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property InvTotal() As Double
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.InvTotalColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InvTotal' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.InvTotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property InvProduct() As String
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.InvProductColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InvProduct' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.InvProductColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property InvCountry() As String
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.InvCountryColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InvCountry' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.InvCountryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property InvFCountry() As String
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.InvFCountryColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InvFCountry' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.InvFCountryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property InvInterPort() As String
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.InvInterPortColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InvInterPort' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.InvInterPortColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property InvProductQty() As Double
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.InvProductQtyColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InvProductQty' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.InvProductQtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property InvProductUnit() As String
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.InvProductUnitColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InvProductUnit' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.InvProductUnitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property InvCurUnit() As String
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.InvCurUnitColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InvCurUnit' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.InvCurUnitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property InvCurRate() As Double
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.InvCurRateColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InvCurRate' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.InvCurRateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ImExDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.ImExDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ImExDate' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.ImExDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BLNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.BLNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BLNo' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.BLNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BookingNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.BookingNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BookingNo' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.BookingNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearPort() As String
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.ClearPortColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClearPort' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.ClearPortColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearPortNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.ClearPortNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClearPortNo' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.ClearPortNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.ClearDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClearDate' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.ClearDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property LoadDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.LoadDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LoadDate' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.LoadDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ForwarderCode() As String
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.ForwarderCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ForwarderCode' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.ForwarderCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AgentCode() As String
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.AgentCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AgentCode' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.AgentCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property VesselName() As String
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.VesselNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VesselName' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.VesselNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ETDDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.ETDDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ETDDate' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.ETDDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ETADate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.ETADateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ETADate' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.ETADateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ETTime() As Date
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.ETTimeColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ETTime' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.ETTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property FNetPrice() As String
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.FNetPriceColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FNetPrice' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.FNetPriceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BNetPrice() As Double
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.BNetPriceColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BNetPrice' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.BNetPriceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CancelReson() As String
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.CancelResonColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CancelReson' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.CancelResonColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CancelDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.CancelDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CancelDate' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.CancelDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CancelTime() As Date
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.CancelTimeColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CancelTime' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.CancelTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CancelProve() As String
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.CancelProveColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CancelProve' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.CancelProveColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CancelProveDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.CancelProveDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CancelProveDate' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.CancelProveDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CancelProveTime() As Date
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.CancelProveTimeColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CancelProveTime' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.CancelProveTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CloseJobDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.CloseJobDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CloseJobDate' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.CloseJobDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CloseJobTime() As Date
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.CloseJobTimeColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CloseJobTime' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.CloseJobTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CloseJobBy() As String
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.CloseJobByColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CloseJobBy' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.CloseJobByColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DeclareType() As String
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.DeclareTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DeclareType' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.DeclareTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DeclareNumber() As String
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.DeclareNumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DeclareNumber' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.DeclareNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DeclareStatus() As String
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.DeclareStatusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DeclareStatus' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.DeclareStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TyAuthorSp() As String
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.TyAuthorSpColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TyAuthorSp' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.TyAuthorSpColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Ty19BIS() As String
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.Ty19BISColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Ty19BIS' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.Ty19BISColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TyClearTax() As String
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.TyClearTaxColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TyClearTax' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.TyClearTaxColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TyClearTaxReson() As String
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.TyClearTaxResonColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TyClearTaxReson' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.TyClearTaxResonColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EstDeliverDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.EstDeliverDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EstDeliverDate' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.EstDeliverDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property EstDeliverTime() As Date
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.EstDeliverTimeColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EstDeliverTime' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.EstDeliverTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TotalContainer() As String
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.TotalContainerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalContainer' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.TotalContainerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DutyDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.DutyDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DutyDate' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.DutyDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DutyAmount() As Double
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.DutyAmountColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DutyAmount' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.DutyAmountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DutyCustPayOther() As String
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.DutyCustPayOtherColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DutyCustPayOther' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.DutyCustPayOtherColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DutyCustPayChqAmt() As Double
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.DutyCustPayChqAmtColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DutyCustPayChqAmt' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.DutyCustPayChqAmtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DutyCustPayBankAmt() As Double
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.DutyCustPayBankAmtColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DutyCustPayBankAmt' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.DutyCustPayBankAmtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DutyCustPayEPAYAmt() As Double
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.DutyCustPayEPAYAmtColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DutyCustPayEPAYAmt' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.DutyCustPayEPAYAmtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DutyCustPayCardAmt() As Double
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.DutyCustPayCardAmtColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DutyCustPayCardAmt' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.DutyCustPayCardAmtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DutyCustPayCashAmt() As Double
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.DutyCustPayCashAmtColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DutyCustPayCashAmt' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.DutyCustPayCashAmtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DutyCustPayOtherAmt() As Double
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.DutyCustPayOtherAmtColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DutyCustPayOtherAmt' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.DutyCustPayOtherAmtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DutyLtdPayOther() As String
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.DutyLtdPayOtherColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DutyLtdPayOther' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.DutyLtdPayOtherColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DutyLtdPayChqAmt() As Double
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.DutyLtdPayChqAmtColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DutyLtdPayChqAmt' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.DutyLtdPayChqAmtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DutyLtdPayEPAYAmt() As Double
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.DutyLtdPayEPAYAmtColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DutyLtdPayEPAYAmt' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.DutyLtdPayEPAYAmtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DutyLtdPayCashAmt() As Double
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.DutyLtdPayCashAmtColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DutyLtdPayCashAmt' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.DutyLtdPayCashAmtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DutyLtdPayOtherAmt() As Double
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.DutyLtdPayOtherAmtColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DutyLtdPayOtherAmt' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.DutyLtdPayOtherAmtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ConfirmChqDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.ConfirmChqDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ConfirmChqDate' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.ConfirmChqDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ShippingEmp() As String
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.ShippingEmpColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ShippingEmp' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.ShippingEmpColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ShippingCmd() As String
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.ShippingCmdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ShippingCmd' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.ShippingCmdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TotalGW() As Double
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.TotalGWColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalGW' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.TotalGWColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property GWUnit() As String
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.GWUnitColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GWUnit' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.GWUnitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TSRequest() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.TSRequestColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TSRequest' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.TSRequestColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ShipmentType() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.ShipmentTypeColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ShipmentType' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.ShipmentTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ReadyToClearDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.ReadyToClearDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReadyToClearDate' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.ReadyToClearDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Commission() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.CommissionColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Commission' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.CommissionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CommPayTo() As String
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.CommPayToColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CommPayTo' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.CommPayToColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ProjectName() As String
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.ProjectNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProjectName' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.ProjectNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MVesselName() As String
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.MVesselNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MVesselName' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.MVesselNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TotalNW() As Double
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.TotalNWColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalNW' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.TotalNWColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Measurement() As String
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.MeasurementColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Measurement' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.MeasurementColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CustRefNO() As String
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.CustRefNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CustRefNO' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.CustRefNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TotalQty() As String
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.TotalQtyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalQty' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.TotalQtyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property HAWB() As String
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.HAWBColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HAWB' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.HAWBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MAWB() As String
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.MAWBColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MAWB' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.MAWBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property consigneecode() As String
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.consigneecodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'consigneecode' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.consigneecodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property privilegests() As String
            Get
                Try 
                    Return CType(Me(Me.tableJob_Order.privilegestsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'privilegests' in table 'Job_Order' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableJob_Order.privilegestsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBranchCodeNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.BranchCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBranchCodeNull()
            Me(Me.tableJob_Order.BranchCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsJNoNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.JNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetJNoNull()
            Me(Me.tableJob_Order.JNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsJReviseNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.JReviseColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetJReviseNull()
            Me(Me.tableJob_Order.JReviseColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsConfirmDateNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.ConfirmDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetConfirmDateNull()
            Me(Me.tableJob_Order.ConfirmDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCPolicyCodeNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.CPolicyCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCPolicyCodeNull()
            Me(Me.tableJob_Order.CPolicyCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDocDateNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.DocDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDocDateNull()
            Me(Me.tableJob_Order.DocDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCustCodeNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.CustCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCustCodeNull()
            Me(Me.tableJob_Order.CustCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCustBranchNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.CustBranchColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCustBranchNull()
            Me(Me.tableJob_Order.CustBranchColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCustContactNameNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.CustContactNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCustContactNameNull()
            Me(Me.tableJob_Order.CustContactNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsQNoNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.QNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetQNoNull()
            Me(Me.tableJob_Order.QNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsReviseNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.ReviseColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetReviseNull()
            Me(Me.tableJob_Order.ReviseColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsManagerCodeNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.ManagerCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetManagerCodeNull()
            Me(Me.tableJob_Order.ManagerCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCSCodeNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.CSCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCSCodeNull()
            Me(Me.tableJob_Order.CSCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDescriptionNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDescriptionNull()
            Me(Me.tableJob_Order.DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTRemarkNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.TRemarkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTRemarkNull()
            Me(Me.tableJob_Order.TRemarkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsJobStatusNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.JobStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetJobStatusNull()
            Me(Me.tableJob_Order.JobStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsJobTypeNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.JobTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetJobTypeNull()
            Me(Me.tableJob_Order.JobTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsShipByNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.ShipByColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetShipByNull()
            Me(Me.tableJob_Order.ShipByColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsInvNoNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.InvNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetInvNoNull()
            Me(Me.tableJob_Order.InvNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsInvTotalNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.InvTotalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetInvTotalNull()
            Me(Me.tableJob_Order.InvTotalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsInvProductNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.InvProductColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetInvProductNull()
            Me(Me.tableJob_Order.InvProductColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsInvCountryNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.InvCountryColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetInvCountryNull()
            Me(Me.tableJob_Order.InvCountryColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsInvFCountryNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.InvFCountryColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetInvFCountryNull()
            Me(Me.tableJob_Order.InvFCountryColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsInvInterPortNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.InvInterPortColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetInvInterPortNull()
            Me(Me.tableJob_Order.InvInterPortColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsInvProductQtyNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.InvProductQtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetInvProductQtyNull()
            Me(Me.tableJob_Order.InvProductQtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsInvProductUnitNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.InvProductUnitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetInvProductUnitNull()
            Me(Me.tableJob_Order.InvProductUnitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsInvCurUnitNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.InvCurUnitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetInvCurUnitNull()
            Me(Me.tableJob_Order.InvCurUnitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsInvCurRateNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.InvCurRateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetInvCurRateNull()
            Me(Me.tableJob_Order.InvCurRateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsImExDateNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.ImExDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetImExDateNull()
            Me(Me.tableJob_Order.ImExDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBLNoNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.BLNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBLNoNull()
            Me(Me.tableJob_Order.BLNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBookingNoNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.BookingNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBookingNoNull()
            Me(Me.tableJob_Order.BookingNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClearPortNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.ClearPortColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClearPortNull()
            Me(Me.tableJob_Order.ClearPortColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClearPortNoNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.ClearPortNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClearPortNoNull()
            Me(Me.tableJob_Order.ClearPortNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsClearDateNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.ClearDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetClearDateNull()
            Me(Me.tableJob_Order.ClearDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsLoadDateNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.LoadDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetLoadDateNull()
            Me(Me.tableJob_Order.LoadDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsForwarderCodeNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.ForwarderCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetForwarderCodeNull()
            Me(Me.tableJob_Order.ForwarderCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAgentCodeNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.AgentCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAgentCodeNull()
            Me(Me.tableJob_Order.AgentCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsVesselNameNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.VesselNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetVesselNameNull()
            Me(Me.tableJob_Order.VesselNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsETDDateNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.ETDDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetETDDateNull()
            Me(Me.tableJob_Order.ETDDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsETADateNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.ETADateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetETADateNull()
            Me(Me.tableJob_Order.ETADateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsETTimeNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.ETTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetETTimeNull()
            Me(Me.tableJob_Order.ETTimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsFNetPriceNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.FNetPriceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetFNetPriceNull()
            Me(Me.tableJob_Order.FNetPriceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsBNetPriceNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.BNetPriceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetBNetPriceNull()
            Me(Me.tableJob_Order.BNetPriceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCancelResonNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.CancelResonColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCancelResonNull()
            Me(Me.tableJob_Order.CancelResonColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCancelDateNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.CancelDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCancelDateNull()
            Me(Me.tableJob_Order.CancelDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCancelTimeNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.CancelTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCancelTimeNull()
            Me(Me.tableJob_Order.CancelTimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCancelProveNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.CancelProveColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCancelProveNull()
            Me(Me.tableJob_Order.CancelProveColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCancelProveDateNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.CancelProveDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCancelProveDateNull()
            Me(Me.tableJob_Order.CancelProveDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCancelProveTimeNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.CancelProveTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCancelProveTimeNull()
            Me(Me.tableJob_Order.CancelProveTimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCloseJobDateNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.CloseJobDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCloseJobDateNull()
            Me(Me.tableJob_Order.CloseJobDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCloseJobTimeNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.CloseJobTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCloseJobTimeNull()
            Me(Me.tableJob_Order.CloseJobTimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCloseJobByNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.CloseJobByColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCloseJobByNull()
            Me(Me.tableJob_Order.CloseJobByColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDeclareTypeNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.DeclareTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDeclareTypeNull()
            Me(Me.tableJob_Order.DeclareTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDeclareNumberNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.DeclareNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDeclareNumberNull()
            Me(Me.tableJob_Order.DeclareNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDeclareStatusNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.DeclareStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDeclareStatusNull()
            Me(Me.tableJob_Order.DeclareStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTyAuthorSpNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.TyAuthorSpColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTyAuthorSpNull()
            Me(Me.tableJob_Order.TyAuthorSpColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTy19BISNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.Ty19BISColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTy19BISNull()
            Me(Me.tableJob_Order.Ty19BISColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTyClearTaxNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.TyClearTaxColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTyClearTaxNull()
            Me(Me.tableJob_Order.TyClearTaxColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTyClearTaxResonNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.TyClearTaxResonColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTyClearTaxResonNull()
            Me(Me.tableJob_Order.TyClearTaxResonColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEstDeliverDateNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.EstDeliverDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEstDeliverDateNull()
            Me(Me.tableJob_Order.EstDeliverDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsEstDeliverTimeNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.EstDeliverTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetEstDeliverTimeNull()
            Me(Me.tableJob_Order.EstDeliverTimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTotalContainerNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.TotalContainerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTotalContainerNull()
            Me(Me.tableJob_Order.TotalContainerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDutyDateNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.DutyDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDutyDateNull()
            Me(Me.tableJob_Order.DutyDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDutyAmountNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.DutyAmountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDutyAmountNull()
            Me(Me.tableJob_Order.DutyAmountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDutyCustPayOtherNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.DutyCustPayOtherColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDutyCustPayOtherNull()
            Me(Me.tableJob_Order.DutyCustPayOtherColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDutyCustPayChqAmtNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.DutyCustPayChqAmtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDutyCustPayChqAmtNull()
            Me(Me.tableJob_Order.DutyCustPayChqAmtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDutyCustPayBankAmtNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.DutyCustPayBankAmtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDutyCustPayBankAmtNull()
            Me(Me.tableJob_Order.DutyCustPayBankAmtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDutyCustPayEPAYAmtNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.DutyCustPayEPAYAmtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDutyCustPayEPAYAmtNull()
            Me(Me.tableJob_Order.DutyCustPayEPAYAmtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDutyCustPayCardAmtNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.DutyCustPayCardAmtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDutyCustPayCardAmtNull()
            Me(Me.tableJob_Order.DutyCustPayCardAmtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDutyCustPayCashAmtNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.DutyCustPayCashAmtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDutyCustPayCashAmtNull()
            Me(Me.tableJob_Order.DutyCustPayCashAmtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDutyCustPayOtherAmtNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.DutyCustPayOtherAmtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDutyCustPayOtherAmtNull()
            Me(Me.tableJob_Order.DutyCustPayOtherAmtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDutyLtdPayOtherNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.DutyLtdPayOtherColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDutyLtdPayOtherNull()
            Me(Me.tableJob_Order.DutyLtdPayOtherColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDutyLtdPayChqAmtNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.DutyLtdPayChqAmtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDutyLtdPayChqAmtNull()
            Me(Me.tableJob_Order.DutyLtdPayChqAmtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDutyLtdPayEPAYAmtNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.DutyLtdPayEPAYAmtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDutyLtdPayEPAYAmtNull()
            Me(Me.tableJob_Order.DutyLtdPayEPAYAmtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDutyLtdPayCashAmtNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.DutyLtdPayCashAmtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDutyLtdPayCashAmtNull()
            Me(Me.tableJob_Order.DutyLtdPayCashAmtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDutyLtdPayOtherAmtNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.DutyLtdPayOtherAmtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDutyLtdPayOtherAmtNull()
            Me(Me.tableJob_Order.DutyLtdPayOtherAmtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsConfirmChqDateNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.ConfirmChqDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetConfirmChqDateNull()
            Me(Me.tableJob_Order.ConfirmChqDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsShippingEmpNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.ShippingEmpColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetShippingEmpNull()
            Me(Me.tableJob_Order.ShippingEmpColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsShippingCmdNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.ShippingCmdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetShippingCmdNull()
            Me(Me.tableJob_Order.ShippingCmdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTotalGWNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.TotalGWColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTotalGWNull()
            Me(Me.tableJob_Order.TotalGWColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsGWUnitNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.GWUnitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetGWUnitNull()
            Me(Me.tableJob_Order.GWUnitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTSRequestNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.TSRequestColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTSRequestNull()
            Me(Me.tableJob_Order.TSRequestColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsShipmentTypeNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.ShipmentTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetShipmentTypeNull()
            Me(Me.tableJob_Order.ShipmentTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsReadyToClearDateNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.ReadyToClearDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetReadyToClearDateNull()
            Me(Me.tableJob_Order.ReadyToClearDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCommissionNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.CommissionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCommissionNull()
            Me(Me.tableJob_Order.CommissionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCommPayToNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.CommPayToColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCommPayToNull()
            Me(Me.tableJob_Order.CommPayToColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsProjectNameNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.ProjectNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetProjectNameNull()
            Me(Me.tableJob_Order.ProjectNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMVesselNameNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.MVesselNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMVesselNameNull()
            Me(Me.tableJob_Order.MVesselNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTotalNWNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.TotalNWColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTotalNWNull()
            Me(Me.tableJob_Order.TotalNWColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMeasurementNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.MeasurementColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMeasurementNull()
            Me(Me.tableJob_Order.MeasurementColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCustRefNONull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.CustRefNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCustRefNONull()
            Me(Me.tableJob_Order.CustRefNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsTotalQtyNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.TotalQtyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetTotalQtyNull()
            Me(Me.tableJob_Order.TotalQtyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsHAWBNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.HAWBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetHAWBNull()
            Me(Me.tableJob_Order.HAWBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMAWBNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.MAWBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMAWBNull()
            Me(Me.tableJob_Order.MAWBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsconsigneecodeNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.consigneecodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetconsigneecodeNull()
            Me(Me.tableJob_Order.consigneecodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsprivilegestsNull() As Boolean
            Return Me.IsNull(Me.tableJob_Order.privilegestsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetprivilegestsNull()
            Me(Me.tableJob_Order.privilegestsColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class Job_OrderRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Job_OrderRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As Job_OrderRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As Job_OrderRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace dsJobOrderTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Job_OrderTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Job_Order"
            tableMapping.ColumnMappings.Add("BranchCode", "BranchCode")
            tableMapping.ColumnMappings.Add("JNo", "JNo")
            tableMapping.ColumnMappings.Add("JRevise", "JRevise")
            tableMapping.ColumnMappings.Add("ConfirmDate", "ConfirmDate")
            tableMapping.ColumnMappings.Add("CPolicyCode", "CPolicyCode")
            tableMapping.ColumnMappings.Add("DocDate", "DocDate")
            tableMapping.ColumnMappings.Add("CustCode", "CustCode")
            tableMapping.ColumnMappings.Add("CustBranch", "CustBranch")
            tableMapping.ColumnMappings.Add("CustContactName", "CustContactName")
            tableMapping.ColumnMappings.Add("QNo", "QNo")
            tableMapping.ColumnMappings.Add("Revise", "Revise")
            tableMapping.ColumnMappings.Add("ManagerCode", "ManagerCode")
            tableMapping.ColumnMappings.Add("CSCode", "CSCode")
            tableMapping.ColumnMappings.Add("Description", "Description")
            tableMapping.ColumnMappings.Add("TRemark", "TRemark")
            tableMapping.ColumnMappings.Add("JobStatus", "JobStatus")
            tableMapping.ColumnMappings.Add("JobType", "JobType")
            tableMapping.ColumnMappings.Add("ShipBy", "ShipBy")
            tableMapping.ColumnMappings.Add("InvNo", "InvNo")
            tableMapping.ColumnMappings.Add("InvTotal", "InvTotal")
            tableMapping.ColumnMappings.Add("InvProduct", "InvProduct")
            tableMapping.ColumnMappings.Add("InvCountry", "InvCountry")
            tableMapping.ColumnMappings.Add("InvFCountry", "InvFCountry")
            tableMapping.ColumnMappings.Add("InvInterPort", "InvInterPort")
            tableMapping.ColumnMappings.Add("InvProductQty", "InvProductQty")
            tableMapping.ColumnMappings.Add("InvProductUnit", "InvProductUnit")
            tableMapping.ColumnMappings.Add("InvCurUnit", "InvCurUnit")
            tableMapping.ColumnMappings.Add("InvCurRate", "InvCurRate")
            tableMapping.ColumnMappings.Add("ImExDate", "ImExDate")
            tableMapping.ColumnMappings.Add("BLNo", "BLNo")
            tableMapping.ColumnMappings.Add("BookingNo", "BookingNo")
            tableMapping.ColumnMappings.Add("ClearPort", "ClearPort")
            tableMapping.ColumnMappings.Add("ClearPortNo", "ClearPortNo")
            tableMapping.ColumnMappings.Add("ClearDate", "ClearDate")
            tableMapping.ColumnMappings.Add("LoadDate", "LoadDate")
            tableMapping.ColumnMappings.Add("ForwarderCode", "ForwarderCode")
            tableMapping.ColumnMappings.Add("AgentCode", "AgentCode")
            tableMapping.ColumnMappings.Add("VesselName", "VesselName")
            tableMapping.ColumnMappings.Add("ETDDate", "ETDDate")
            tableMapping.ColumnMappings.Add("ETADate", "ETADate")
            tableMapping.ColumnMappings.Add("ETTime", "ETTime")
            tableMapping.ColumnMappings.Add("FNetPrice", "FNetPrice")
            tableMapping.ColumnMappings.Add("BNetPrice", "BNetPrice")
            tableMapping.ColumnMappings.Add("CancelReson", "CancelReson")
            tableMapping.ColumnMappings.Add("CancelDate", "CancelDate")
            tableMapping.ColumnMappings.Add("CancelTime", "CancelTime")
            tableMapping.ColumnMappings.Add("CancelProve", "CancelProve")
            tableMapping.ColumnMappings.Add("CancelProveDate", "CancelProveDate")
            tableMapping.ColumnMappings.Add("CancelProveTime", "CancelProveTime")
            tableMapping.ColumnMappings.Add("CloseJobDate", "CloseJobDate")
            tableMapping.ColumnMappings.Add("CloseJobTime", "CloseJobTime")
            tableMapping.ColumnMappings.Add("CloseJobBy", "CloseJobBy")
            tableMapping.ColumnMappings.Add("DeclareType", "DeclareType")
            tableMapping.ColumnMappings.Add("DeclareNumber", "DeclareNumber")
            tableMapping.ColumnMappings.Add("DeclareStatus", "DeclareStatus")
            tableMapping.ColumnMappings.Add("TyAuthorSp", "TyAuthorSp")
            tableMapping.ColumnMappings.Add("Ty19BIS", "Ty19BIS")
            tableMapping.ColumnMappings.Add("TyClearTax", "TyClearTax")
            tableMapping.ColumnMappings.Add("TyClearTaxReson", "TyClearTaxReson")
            tableMapping.ColumnMappings.Add("EstDeliverDate", "EstDeliverDate")
            tableMapping.ColumnMappings.Add("EstDeliverTime", "EstDeliverTime")
            tableMapping.ColumnMappings.Add("TotalContainer", "TotalContainer")
            tableMapping.ColumnMappings.Add("DutyDate", "DutyDate")
            tableMapping.ColumnMappings.Add("DutyAmount", "DutyAmount")
            tableMapping.ColumnMappings.Add("DutyCustPayOther", "DutyCustPayOther")
            tableMapping.ColumnMappings.Add("DutyCustPayChqAmt", "DutyCustPayChqAmt")
            tableMapping.ColumnMappings.Add("DutyCustPayBankAmt", "DutyCustPayBankAmt")
            tableMapping.ColumnMappings.Add("DutyCustPayEPAYAmt", "DutyCustPayEPAYAmt")
            tableMapping.ColumnMappings.Add("DutyCustPayCardAmt", "DutyCustPayCardAmt")
            tableMapping.ColumnMappings.Add("DutyCustPayCashAmt", "DutyCustPayCashAmt")
            tableMapping.ColumnMappings.Add("DutyCustPayOtherAmt", "DutyCustPayOtherAmt")
            tableMapping.ColumnMappings.Add("DutyLtdPayOther", "DutyLtdPayOther")
            tableMapping.ColumnMappings.Add("DutyLtdPayChqAmt", "DutyLtdPayChqAmt")
            tableMapping.ColumnMappings.Add("DutyLtdPayEPAYAmt", "DutyLtdPayEPAYAmt")
            tableMapping.ColumnMappings.Add("DutyLtdPayCashAmt", "DutyLtdPayCashAmt")
            tableMapping.ColumnMappings.Add("DutyLtdPayOtherAmt", "DutyLtdPayOtherAmt")
            tableMapping.ColumnMappings.Add("ConfirmChqDate", "ConfirmChqDate")
            tableMapping.ColumnMappings.Add("ShippingEmp", "ShippingEmp")
            tableMapping.ColumnMappings.Add("ShippingCmd", "ShippingCmd")
            tableMapping.ColumnMappings.Add("TotalGW", "TotalGW")
            tableMapping.ColumnMappings.Add("GWUnit", "GWUnit")
            tableMapping.ColumnMappings.Add("TSRequest", "TSRequest")
            tableMapping.ColumnMappings.Add("ShipmentType", "ShipmentType")
            tableMapping.ColumnMappings.Add("ReadyToClearDate", "ReadyToClearDate")
            tableMapping.ColumnMappings.Add("Commission", "Commission")
            tableMapping.ColumnMappings.Add("CommPayTo", "CommPayTo")
            tableMapping.ColumnMappings.Add("ProjectName", "ProjectName")
            tableMapping.ColumnMappings.Add("MVesselName", "MVesselName")
            tableMapping.ColumnMappings.Add("TotalNW", "TotalNW")
            tableMapping.ColumnMappings.Add("Measurement", "Measurement")
            tableMapping.ColumnMappings.Add("CustRefNO", "CustRefNO")
            tableMapping.ColumnMappings.Add("TotalQty", "TotalQty")
            tableMapping.ColumnMappings.Add("HAWB", "HAWB")
            tableMapping.ColumnMappings.Add("MAWB", "MAWB")
            tableMapping.ColumnMappings.Add("consigneecode", "consigneecode")
            tableMapping.ColumnMappings.Add("privilegests", "privilegests")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Job_Order] ([BranchCode], [JNo], [JRevise], [ConfirmDate], [CP"& _ 
                "olicyCode], [DocDate], [CustCode], [CustBranch], [CustContactName], [QNo], [Revi"& _ 
                "se], [ManagerCode], [CSCode], [Description], [TRemark], [JobStatus], [JobType], "& _ 
                "[ShipBy], [InvNo], [InvTotal], [InvProduct], [InvCountry], [InvFCountry], [InvIn"& _ 
                "terPort], [InvProductQty], [InvProductUnit], [InvCurUnit], [InvCurRate], [ImExDa"& _ 
                "te], [BLNo], [BookingNo], [ClearPort], [ClearPortNo], [ClearDate], [LoadDate], ["& _ 
                "ForwarderCode], [AgentCode], [VesselName], [ETDDate], [ETADate], [ETTime], [FNet"& _ 
                "Price], [BNetPrice], [CancelReson], [CancelDate], [CancelTime], [CancelProve], ["& _ 
                "CancelProveDate], [CancelProveTime], [CloseJobDate], [CloseJobTime], [CloseJobBy"& _ 
                "], [DeclareType], [DeclareNumber], [DeclareStatus], [TyAuthorSp], [Ty19BIS], [Ty"& _ 
                "ClearTax], [TyClearTaxReson], [EstDeliverDate], [EstDeliverTime], [TotalContaine"& _ 
                "r], [DutyDate], [DutyAmount], [DutyCustPayOther], [DutyCustPayChqAmt], [DutyCust"& _ 
                "PayBankAmt], [DutyCustPayEPAYAmt], [DutyCustPayCardAmt], [DutyCustPayCashAmt], ["& _ 
                "DutyCustPayOtherAmt], [DutyLtdPayOther], [DutyLtdPayChqAmt], [DutyLtdPayEPAYAmt]"& _ 
                ", [DutyLtdPayCashAmt], [DutyLtdPayOtherAmt], [ConfirmChqDate], [ShippingEmp], [S"& _ 
                "hippingCmd], [TotalGW], [GWUnit], [TSRequest], [ShipmentType], [ReadyToClearDate"& _ 
                "], [Commission], [CommPayTo], [ProjectName], [MVesselName], [TotalNW], [Measurem"& _ 
                "ent], [CustRefNO], [TotalQty], [HAWB], [MAWB], [consigneecode], [privilegests]) "& _ 
                "VALUES (@BranchCode, @JNo, @JRevise, @ConfirmDate, @CPolicyCode, @DocDate, @Cust"& _ 
                "Code, @CustBranch, @CustContactName, @QNo, @Revise, @ManagerCode, @CSCode, @Desc"& _ 
                "ription, @TRemark, @JobStatus, @JobType, @ShipBy, @InvNo, @InvTotal, @InvProduct"& _ 
                ", @InvCountry, @InvFCountry, @InvInterPort, @InvProductQty, @InvProductUnit, @In"& _ 
                "vCurUnit, @InvCurRate, @ImExDate, @BLNo, @BookingNo, @ClearPort, @ClearPortNo, @"& _ 
                "ClearDate, @LoadDate, @ForwarderCode, @AgentCode, @VesselName, @ETDDate, @ETADat"& _ 
                "e, @ETTime, @FNetPrice, @BNetPrice, @CancelReson, @CancelDate, @CancelTime, @Can"& _ 
                "celProve, @CancelProveDate, @CancelProveTime, @CloseJobDate, @CloseJobTime, @Clo"& _ 
                "seJobBy, @DeclareType, @DeclareNumber, @DeclareStatus, @TyAuthorSp, @Ty19BIS, @T"& _ 
                "yClearTax, @TyClearTaxReson, @EstDeliverDate, @EstDeliverTime, @TotalContainer, "& _ 
                "@DutyDate, @DutyAmount, @DutyCustPayOther, @DutyCustPayChqAmt, @DutyCustPayBankA"& _ 
                "mt, @DutyCustPayEPAYAmt, @DutyCustPayCardAmt, @DutyCustPayCashAmt, @DutyCustPayO"& _ 
                "therAmt, @DutyLtdPayOther, @DutyLtdPayChqAmt, @DutyLtdPayEPAYAmt, @DutyLtdPayCas"& _ 
                "hAmt, @DutyLtdPayOtherAmt, @ConfirmChqDate, @ShippingEmp, @ShippingCmd, @TotalGW"& _ 
                ", @GWUnit, @TSRequest, @ShipmentType, @ReadyToClearDate, @Commission, @CommPayTo"& _ 
                ", @ProjectName, @MVesselName, @TotalNW, @Measurement, @CustRefNO, @TotalQty, @HA"& _ 
                "WB, @MAWB, @consigneecode, @privilegests)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BranchCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BranchCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@JNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "JNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@JRevise", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "JRevise", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ConfirmDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConfirmDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CPolicyCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CPolicyCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DocDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DocDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustBranch", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustBranch", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustContactName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustContactName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@QNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Revise", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Revise", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ManagerCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ManagerCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CSCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CSCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Description", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TRemark", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRemark", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@JobStatus", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "JobStatus", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@JobType", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "JobType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ShipBy", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShipBy", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InvNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InvNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InvTotal", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InvTotal", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InvProduct", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InvProduct", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InvCountry", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InvCountry", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InvFCountry", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InvFCountry", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InvInterPort", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InvInterPort", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InvProductQty", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InvProductQty", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InvProductUnit", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InvProductUnit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InvCurUnit", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InvCurUnit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InvCurRate", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InvCurRate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ImExDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ImExDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BLNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BLNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BookingNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BookingNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClearPort", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClearPort", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClearPortNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClearPortNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClearDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ClearDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LoadDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LoadDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ForwarderCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ForwarderCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AgentCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AgentCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VesselName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VesselName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ETDDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ETDDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ETADate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ETADate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ETTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ETTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FNetPrice", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FNetPrice", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BNetPrice", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BNetPrice", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CancelReson", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CancelReson", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CancelDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CancelDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CancelTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CancelTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CancelProve", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CancelProve", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CancelProveDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CancelProveDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CancelProveTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CancelProveTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CloseJobDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CloseJobDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CloseJobTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CloseJobTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CloseJobBy", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CloseJobBy", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DeclareType", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DeclareType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DeclareNumber", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DeclareNumber", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DeclareStatus", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DeclareStatus", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TyAuthorSp", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TyAuthorSp", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Ty19BIS", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Ty19BIS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TyClearTax", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TyClearTax", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TyClearTaxReson", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TyClearTaxReson", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EstDeliverDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EstDeliverDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EstDeliverTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EstDeliverTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TotalContainer", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalContainer", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DutyDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DutyDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DutyAmount", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DutyAmount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DutyCustPayOther", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DutyCustPayOther", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DutyCustPayChqAmt", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DutyCustPayChqAmt", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DutyCustPayBankAmt", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DutyCustPayBankAmt", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DutyCustPayEPAYAmt", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DutyCustPayEPAYAmt", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DutyCustPayCardAmt", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DutyCustPayCardAmt", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DutyCustPayCashAmt", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DutyCustPayCashAmt", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DutyCustPayOtherAmt", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DutyCustPayOtherAmt", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DutyLtdPayOther", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DutyLtdPayOther", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DutyLtdPayChqAmt", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DutyLtdPayChqAmt", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DutyLtdPayEPAYAmt", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DutyLtdPayEPAYAmt", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DutyLtdPayCashAmt", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DutyLtdPayCashAmt", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DutyLtdPayOtherAmt", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DutyLtdPayOtherAmt", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ConfirmChqDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ConfirmChqDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ShippingEmp", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShippingEmp", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ShippingCmd", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShippingCmd", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TotalGW", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalGW", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GWUnit", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GWUnit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TSRequest", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TSRequest", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ShipmentType", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ShipmentType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ReadyToClearDate", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ReadyToClearDate", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Commission", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Commission", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CommPayTo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CommPayTo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProjectName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProjectName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MVesselName", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MVesselName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TotalNW", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalNW", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Measurement", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Measurement", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CustRefNO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CustRefNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TotalQty", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotalQty", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HAWB", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HAWB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MAWB", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MAWB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@consigneecode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "consigneecode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@privilegests", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "privilegests", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("JobWebConnectionString").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT BranchCode, JNo, JRevise, ConfirmDate, CPolicyCode, DocDate, CustCode, Cus"& _ 
                "tBranch, CustContactName, QNo, Revise, ManagerCode, CSCode, Description, TRemark"& _ 
                ", JobStatus, JobType, ShipBy, InvNo, InvTotal, InvProduct, InvCountry, InvFCount"& _ 
                "ry, InvInterPort, InvProductQty, InvProductUnit, InvCurUnit, InvCurRate, ImExDat"& _ 
                "e, BLNo, BookingNo, ClearPort, ClearPortNo, ClearDate, LoadDate, ForwarderCode, "& _ 
                "AgentCode, VesselName, ETDDate, ETADate, ETTime, FNetPrice, BNetPrice, CancelRes"& _ 
                "on, CancelDate, CancelTime, CancelProve, CancelProveDate, CancelProveTime, Close"& _ 
                "JobDate, CloseJobTime, CloseJobBy, DeclareType, DeclareNumber, DeclareStatus, Ty"& _ 
                "AuthorSp, Ty19BIS, TyClearTax, TyClearTaxReson, EstDeliverDate, EstDeliverTime, "& _ 
                "TotalContainer, DutyDate, DutyAmount, DutyCustPayOther, DutyCustPayChqAmt, DutyC"& _ 
                "ustPayBankAmt, DutyCustPayEPAYAmt, DutyCustPayCardAmt, DutyCustPayCashAmt, DutyC"& _ 
                "ustPayOtherAmt, DutyLtdPayOther, DutyLtdPayChqAmt, DutyLtdPayEPAYAmt, DutyLtdPay"& _ 
                "CashAmt, DutyLtdPayOtherAmt, ConfirmChqDate, ShippingEmp, ShippingCmd, TotalGW, "& _ 
                "GWUnit, TSRequest, ShipmentType, ReadyToClearDate, Commission, CommPayTo, Projec"& _ 
                "tName, MVesselName, TotalNW, Measurement, CustRefNO, TotalQty, HAWB, MAWB, consi"& _ 
                "gneecode, privilegests FROM dbo.Job_Order"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsJobOrder.Job_OrderDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsJobOrder.Job_OrderDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsJobOrder.Job_OrderDataTable = New dsJobOrder.Job_OrderDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsJobOrder.Job_OrderDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsJobOrder) As Integer
            Return Me.Adapter.Update(dataSet, "Job_Order")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal BranchCode As String,  _
                    ByVal JNo As String,  _
                    ByVal JRevise As Global.System.Nullable(Of Byte),  _
                    ByVal ConfirmDate As Global.System.Nullable(Of Date),  _
                    ByVal CPolicyCode As String,  _
                    ByVal DocDate As Global.System.Nullable(Of Date),  _
                    ByVal CustCode As String,  _
                    ByVal CustBranch As String,  _
                    ByVal CustContactName As String,  _
                    ByVal QNo As String,  _
                    ByVal Revise As Global.System.Nullable(Of Short),  _
                    ByVal ManagerCode As String,  _
                    ByVal CSCode As String,  _
                    ByVal Description As String,  _
                    ByVal TRemark As String,  _
                    ByVal JobStatus As Global.System.Nullable(Of Byte),  _
                    ByVal JobType As Global.System.Nullable(Of Byte),  _
                    ByVal ShipBy As Global.System.Nullable(Of Byte),  _
                    ByVal InvNo As String,  _
                    ByVal InvTotal As Global.System.Nullable(Of Double),  _
                    ByVal InvProduct As String,  _
                    ByVal InvCountry As String,  _
                    ByVal InvFCountry As String,  _
                    ByVal InvInterPort As String,  _
                    ByVal InvProductQty As Global.System.Nullable(Of Double),  _
                    ByVal InvProductUnit As String,  _
                    ByVal InvCurUnit As String,  _
                    ByVal InvCurRate As Global.System.Nullable(Of Double),  _
                    ByVal ImExDate As Global.System.Nullable(Of Date),  _
                    ByVal BLNo As String,  _
                    ByVal BookingNo As String,  _
                    ByVal ClearPort As String,  _
                    ByVal ClearPortNo As String,  _
                    ByVal ClearDate As Global.System.Nullable(Of Date),  _
                    ByVal LoadDate As Global.System.Nullable(Of Date),  _
                    ByVal ForwarderCode As String,  _
                    ByVal AgentCode As String,  _
                    ByVal VesselName As String,  _
                    ByVal ETDDate As Global.System.Nullable(Of Date),  _
                    ByVal ETADate As Global.System.Nullable(Of Date),  _
                    ByVal ETTime As Global.System.Nullable(Of Date),  _
                    ByVal FNetPrice As String,  _
                    ByVal BNetPrice As Global.System.Nullable(Of Double),  _
                    ByVal CancelReson As String,  _
                    ByVal CancelDate As Global.System.Nullable(Of Date),  _
                    ByVal CancelTime As Global.System.Nullable(Of Date),  _
                    ByVal CancelProve As String,  _
                    ByVal CancelProveDate As Global.System.Nullable(Of Date),  _
                    ByVal CancelProveTime As Global.System.Nullable(Of Date),  _
                    ByVal CloseJobDate As Global.System.Nullable(Of Date),  _
                    ByVal CloseJobTime As Global.System.Nullable(Of Date),  _
                    ByVal CloseJobBy As String,  _
                    ByVal DeclareType As String,  _
                    ByVal DeclareNumber As String,  _
                    ByVal DeclareStatus As String,  _
                    ByVal TyAuthorSp As String,  _
                    ByVal Ty19BIS As String,  _
                    ByVal TyClearTax As String,  _
                    ByVal TyClearTaxReson As String,  _
                    ByVal EstDeliverDate As Global.System.Nullable(Of Date),  _
                    ByVal EstDeliverTime As Global.System.Nullable(Of Date),  _
                    ByVal TotalContainer As String,  _
                    ByVal DutyDate As Global.System.Nullable(Of Date),  _
                    ByVal DutyAmount As Global.System.Nullable(Of Double),  _
                    ByVal DutyCustPayOther As String,  _
                    ByVal DutyCustPayChqAmt As Global.System.Nullable(Of Double),  _
                    ByVal DutyCustPayBankAmt As Global.System.Nullable(Of Double),  _
                    ByVal DutyCustPayEPAYAmt As Global.System.Nullable(Of Double),  _
                    ByVal DutyCustPayCardAmt As Global.System.Nullable(Of Double),  _
                    ByVal DutyCustPayCashAmt As Global.System.Nullable(Of Double),  _
                    ByVal DutyCustPayOtherAmt As Global.System.Nullable(Of Double),  _
                    ByVal DutyLtdPayOther As String,  _
                    ByVal DutyLtdPayChqAmt As Global.System.Nullable(Of Double),  _
                    ByVal DutyLtdPayEPAYAmt As Global.System.Nullable(Of Double),  _
                    ByVal DutyLtdPayCashAmt As Global.System.Nullable(Of Double),  _
                    ByVal DutyLtdPayOtherAmt As Global.System.Nullable(Of Double),  _
                    ByVal ConfirmChqDate As Global.System.Nullable(Of Date),  _
                    ByVal ShippingEmp As String,  _
                    ByVal ShippingCmd As String,  _
                    ByVal TotalGW As Global.System.Nullable(Of Double),  _
                    ByVal GWUnit As String,  _
                    ByVal TSRequest As Global.System.Nullable(Of Byte),  _
                    ByVal ShipmentType As Global.System.Nullable(Of Byte),  _
                    ByVal ReadyToClearDate As Global.System.Nullable(Of Date),  _
                    ByVal Commission As Global.System.Nullable(Of Integer),  _
                    ByVal CommPayTo As String,  _
                    ByVal ProjectName As String,  _
                    ByVal MVesselName As String,  _
                    ByVal TotalNW As Global.System.Nullable(Of Double),  _
                    ByVal Measurement As String,  _
                    ByVal CustRefNO As String,  _
                    ByVal TotalQty As String,  _
                    ByVal HAWB As String,  _
                    ByVal MAWB As String,  _
                    ByVal consigneecode As String,  _
                    ByVal privilegests As String) As Integer
            If (BranchCode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(BranchCode,String)
            End If
            If (JNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(JNo,String)
            End If
            If (JRevise.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(JRevise.Value,Byte)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (ConfirmDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(ConfirmDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (CPolicyCode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(CPolicyCode,String)
            End If
            If (DocDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(DocDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (CustCode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(CustCode,String)
            End If
            If (CustBranch Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(CustBranch,String)
            End If
            If (CustContactName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(CustContactName,String)
            End If
            If (QNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(QNo,String)
            End If
            If (Revise.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(Revise.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (ManagerCode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(ManagerCode,String)
            End If
            If (CSCode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(CSCode,String)
            End If
            If (Description Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(Description,String)
            End If
            If (TRemark Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(TRemark,String)
            End If
            If (JobStatus.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(JobStatus.Value,Byte)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (JobType.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(JobType.Value,Byte)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (ShipBy.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(ShipBy.Value,Byte)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (InvNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(InvNo,String)
            End If
            If (InvTotal.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(InvTotal.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (InvProduct Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(InvProduct,String)
            End If
            If (InvCountry Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(InvCountry,String)
            End If
            If (InvFCountry Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(InvFCountry,String)
            End If
            If (InvInterPort Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(InvInterPort,String)
            End If
            If (InvProductQty.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(InvProductQty.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (InvProductUnit Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(InvProductUnit,String)
            End If
            If (InvCurUnit Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(InvCurUnit,String)
            End If
            If (InvCurRate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(InvCurRate.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (ImExDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(ImExDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (BLNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(BLNo,String)
            End If
            If (BookingNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(BookingNo,String)
            End If
            If (ClearPort Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(ClearPort,String)
            End If
            If (ClearPortNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(ClearPortNo,String)
            End If
            If (ClearDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(ClearDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (LoadDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(LoadDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (ForwarderCode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(ForwarderCode,String)
            End If
            If (AgentCode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(AgentCode,String)
            End If
            If (VesselName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(VesselName,String)
            End If
            If (ETDDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(ETDDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (ETADate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(ETADate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (ETTime.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(ETTime.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (FNetPrice Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(FNetPrice,String)
            End If
            If (BNetPrice.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(BNetPrice.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (CancelReson Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(CancelReson,String)
            End If
            If (CancelDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(CancelDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (CancelTime.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(CancelTime.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (CancelProve Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(46).Value = CType(CancelProve,String)
            End If
            If (CancelProveDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(47).Value = CType(CancelProveDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (CancelProveTime.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(48).Value = CType(CancelProveTime.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (CloseJobDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(49).Value = CType(CloseJobDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (CloseJobTime.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(50).Value = CType(CloseJobTime.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (CloseJobBy Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(51).Value = CType(CloseJobBy,String)
            End If
            If (DeclareType Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(52).Value = CType(DeclareType,String)
            End If
            If (DeclareNumber Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(53).Value = CType(DeclareNumber,String)
            End If
            If (DeclareStatus Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(54).Value = CType(DeclareStatus,String)
            End If
            If (TyAuthorSp Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(55).Value = CType(TyAuthorSp,String)
            End If
            If (Ty19BIS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(56).Value = CType(Ty19BIS,String)
            End If
            If (TyClearTax Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(57).Value = CType(TyClearTax,String)
            End If
            If (TyClearTaxReson Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(58).Value = CType(TyClearTaxReson,String)
            End If
            If (EstDeliverDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(59).Value = CType(EstDeliverDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(59).Value = Global.System.DBNull.Value
            End If
            If (EstDeliverTime.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(60).Value = CType(EstDeliverTime.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(60).Value = Global.System.DBNull.Value
            End If
            If (TotalContainer Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(61).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(61).Value = CType(TotalContainer,String)
            End If
            If (DutyDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(62).Value = CType(DutyDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(62).Value = Global.System.DBNull.Value
            End If
            If (DutyAmount.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(63).Value = CType(DutyAmount.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(63).Value = Global.System.DBNull.Value
            End If
            If (DutyCustPayOther Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(64).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(64).Value = CType(DutyCustPayOther,String)
            End If
            If (DutyCustPayChqAmt.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(65).Value = CType(DutyCustPayChqAmt.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(65).Value = Global.System.DBNull.Value
            End If
            If (DutyCustPayBankAmt.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(66).Value = CType(DutyCustPayBankAmt.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(66).Value = Global.System.DBNull.Value
            End If
            If (DutyCustPayEPAYAmt.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(67).Value = CType(DutyCustPayEPAYAmt.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(67).Value = Global.System.DBNull.Value
            End If
            If (DutyCustPayCardAmt.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(68).Value = CType(DutyCustPayCardAmt.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(68).Value = Global.System.DBNull.Value
            End If
            If (DutyCustPayCashAmt.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(69).Value = CType(DutyCustPayCashAmt.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(69).Value = Global.System.DBNull.Value
            End If
            If (DutyCustPayOtherAmt.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(70).Value = CType(DutyCustPayOtherAmt.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(70).Value = Global.System.DBNull.Value
            End If
            If (DutyLtdPayOther Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(71).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(71).Value = CType(DutyLtdPayOther,String)
            End If
            If (DutyLtdPayChqAmt.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(72).Value = CType(DutyLtdPayChqAmt.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(72).Value = Global.System.DBNull.Value
            End If
            If (DutyLtdPayEPAYAmt.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(73).Value = CType(DutyLtdPayEPAYAmt.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(73).Value = Global.System.DBNull.Value
            End If
            If (DutyLtdPayCashAmt.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(74).Value = CType(DutyLtdPayCashAmt.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(74).Value = Global.System.DBNull.Value
            End If
            If (DutyLtdPayOtherAmt.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(75).Value = CType(DutyLtdPayOtherAmt.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(75).Value = Global.System.DBNull.Value
            End If
            If (ConfirmChqDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(76).Value = CType(ConfirmChqDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(76).Value = Global.System.DBNull.Value
            End If
            If (ShippingEmp Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(77).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(77).Value = CType(ShippingEmp,String)
            End If
            If (ShippingCmd Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(78).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(78).Value = CType(ShippingCmd,String)
            End If
            If (TotalGW.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(79).Value = CType(TotalGW.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(79).Value = Global.System.DBNull.Value
            End If
            If (GWUnit Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(80).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(80).Value = CType(GWUnit,String)
            End If
            If (TSRequest.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(81).Value = CType(TSRequest.Value,Byte)
            Else
                Me.Adapter.InsertCommand.Parameters(81).Value = Global.System.DBNull.Value
            End If
            If (ShipmentType.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(82).Value = CType(ShipmentType.Value,Byte)
            Else
                Me.Adapter.InsertCommand.Parameters(82).Value = Global.System.DBNull.Value
            End If
            If (ReadyToClearDate.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(83).Value = CType(ReadyToClearDate.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(83).Value = Global.System.DBNull.Value
            End If
            If (Commission.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(84).Value = CType(Commission.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(84).Value = Global.System.DBNull.Value
            End If
            If (CommPayTo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(85).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(85).Value = CType(CommPayTo,String)
            End If
            If (ProjectName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(86).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(86).Value = CType(ProjectName,String)
            End If
            If (MVesselName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(87).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(87).Value = CType(MVesselName,String)
            End If
            If (TotalNW.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(88).Value = CType(TotalNW.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(88).Value = Global.System.DBNull.Value
            End If
            If (Measurement Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(89).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(89).Value = CType(Measurement,String)
            End If
            If (CustRefNO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(90).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(90).Value = CType(CustRefNO,String)
            End If
            If (TotalQty Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(91).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(91).Value = CType(TotalQty,String)
            End If
            If (HAWB Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(92).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(92).Value = CType(HAWB,String)
            End If
            If (MAWB Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(93).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(93).Value = CType(MAWB,String)
            End If
            If (consigneecode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(94).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(94).Value = CType(consigneecode,String)
            End If
            If (privilegests Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(95).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(95).Value = CType(privilegests,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _job_OrderTableAdapter As Job_OrderTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property Job_OrderTableAdapter() As Job_OrderTableAdapter
            Get
                Return Me._job_OrderTableAdapter
            End Get
            Set
                Me._job_OrderTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._job_OrderTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._job_OrderTableAdapter.Connection) Is Nothing)) Then
                    Return Me._job_OrderTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._job_OrderTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As dsJobOrder, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._job_OrderTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.Job_Order.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._job_OrderTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As dsJobOrder, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._job_OrderTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.Job_Order.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._job_OrderTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As dsJobOrder, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._job_OrderTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.Job_Order.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._job_OrderTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As dsJobOrder) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._job_OrderTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._job_OrderTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._job_OrderTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._job_OrderTableAdapter, Me._job_OrderTableAdapter.Connection)
                    Me._job_OrderTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._job_OrderTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._job_OrderTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._job_OrderTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._job_OrderTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._job_OrderTableAdapter) Is Nothing) Then
                    Me._job_OrderTableAdapter.Connection = CType(revertConnections(Me._job_OrderTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._job_OrderTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
